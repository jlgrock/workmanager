buildscript {
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.5.RELEASE')
        classpath('com.moowork.gradle:gradle-node-plugin:0.10')
        classpath('com.moowork.gradle:gradle-grunt-plugin:0.10')
    }
}

apply plugin: 'groovy'
sourceCompatibility=1.8
targetCompatibility=1.8
apply plugin: 'maven'
apply plugin: 'spring-boot'
apply plugin: 'war'
apply plugin: 'eclipse-wtp'
apply plugin: 'idea'

defaultTasks 'bootRun'


bootRepackage {
   mainClass = 'com.github.jlgrock.informatix.workmanager.Application'
}

springBoot {
    mainClass = 'com.github.jlgrock.informatix.workmanager.Application'
}

bootRun {
    addResources = false
}

apply from: 'gradle/config/yeoman.gradle'
apply from: 'gradle/config/sonar.gradle'

apply from: 'gradle/config/liquibase.gradle'
apply from: 'gradle/config/gatling.gradle'

apply from: 'gradle/config/mapstruct.gradle'

if (project.hasProperty('prod')) {
    apply from: 'gradle/config/profile_prod.gradle'
} else if (project.hasProperty('fast')) {
    apply from: 'gradle/config/profile_fast.gradle'
} else {
  apply from: 'gradle/config/profile_dev.gradle'
}

group = 'com.github.jlgrock.informatix.workmanager'
version = proj_version

description = ''

configurations {
    providedRuntime
}

repositories {
    maven { url 'http://repo.spring.io/milestone' }
    maven { url 'http://repo.spring.io/snapshot' }
    maven { url 'https://repository.jboss.org/nexus/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/releases' }
    maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    maven { url 'http://repo.maven.apache.org/maven2' }
}

configurations.all {
  resolutionStrategy {
    // force certain versions of dependencies (including transitive)
    //  *append new forced modules:
    force group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: jackson_version
    force group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: jackson_version

  }
}

dependencies {
    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: groovy_version

    compile group: 'io.dropwizard.metrics', name: 'metrics-core'
    compile group: 'io.dropwizard.metrics', name: 'metrics-annotation', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-ehcache', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-graphite', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-healthchecks', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-jvm', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-servlet', version: dropwizard_metrics_version
    compile group: 'io.dropwizard.metrics', name: 'metrics-json', version: dropwizard_metrics_version
    compile (group: 'io.dropwizard.metrics', name: 'metrics-servlets', version: dropwizard_metrics_version) {
        exclude(module: 'metrics-healthchecks')
    }
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-json-org', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hppc', version: jackson_version
    compile group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-hibernate4', version: jackson_version
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: jackson_version
    compile (group: 'com.ryantenney.metrics', name: 'metrics-spring', version: metrics_spring_version) {
        exclude(module: 'metrics-core')
        exclude(module: 'metrics-healthchecks')
    }
    compile(group: 'com.zaxxer', name: 'HikariCP', version: HikariCP_version) {
        exclude(module: 'tools')
    }
    compile group: 'commons-lang', name: 'commons-lang', version: commons_lang_version
    compile group: 'commons-io', name: 'commons-io', version: commons_io_version
    compile group: 'javax.inject', name: 'javax.inject', version: javax_inject_version
    compile group: 'javax.transaction', name: 'javax.transaction-api'
    compile group: 'org.apache.geronimo.javamail', name: 'geronimo-javamail_1.4_mail', version: geronimo_javamail_1_4_mail_version
    compile group: 'org.hibernate', name: 'hibernate-core', version: hibernate_entitymanager_version
    compile group: 'org.hibernate', name: 'hibernate-envers'
    compile (group: 'org.hibernate', name: 'hibernate-ehcache') {
        exclude(module: 'ehcache-core')
    }
    compile group: 'org.hibernate', name: 'hibernate-validator'
    compile group: 'org.jadira.usertype', name: 'usertype.core', version: usertype_core_version
    compile (group: 'org.liquibase', name: 'liquibase-core', version: liquibase_core_version) {
        exclude(module: 'jetty-servlet')
    }
    compile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    compile group: 'org.springframework.boot', name: 'spring-boot-actuator'
    compile group: 'org.springframework.boot', name: 'spring-boot-autoconfigure'
    compile group: 'org.springframework.boot', name: 'spring-boot-loader-tools'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-logging'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa'
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-security'
    compile(group: 'org.springframework.boot', name: 'spring-boot-starter-web') {
        exclude module: 'spring-boot-starter-tomcat'
    }
    compile group: 'org.springframework.boot', name: 'spring-boot-starter-thymeleaf'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-cloudfoundry-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-spring-service-connector'
    compile group: 'org.springframework.cloud', name: 'spring-cloud-localconfig-connector'
    compile(group: 'org.springframework', name: 'spring-context-support') {
        exclude(module: 'quartz')
    }
    compile group: 'org.springframework.security', name: 'spring-security-config', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-data', version: spring_security_version
    compile group: 'org.springframework.security', name: 'spring-security-web', version: spring_security_version
    compile(group: 'io.springfox', name: 'springfox-swagger2', version: springfox_version){
        exclude module: 'mapstruct'
    }

    compile group: 'org.postgresql', name: 'postgresql', version: postgresql_version
    compile group: 'fr.ippon.spark.metrics', name: 'metrics-spark-reporter', version: metrics_spark_reporter_version
    compile group: 'org.mapstruct', name: 'mapstruct-jdk8', version: mapstruct_version


    testCompile group: 'com.jayway.awaitility', name: 'awaitility', version: awaility_version
    testCompile group: 'com.jayway.jsonpath', name: 'json-path'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-test'
    testCompile group: 'org.springframework.boot', name: 'spring-boot-starter-jetty'
	testCompile group: 'org.assertj', name: 'assertj-core', version: assertj_core_version
    testCompile group: 'junit', name: 'junit'
    testCompile group: 'org.mockito', name: 'mockito-core'
    testCompile group: 'com.mattbertolini', name: 'liquibase-slf4j', version: liquibase_slf4j_version
    testCompile group: 'org.hamcrest', name: 'hamcrest-library'
    testCompile group: 'io.gatling.highcharts', name: 'gatling-charts-highcharts', version: gatling_version

    testCompile group: 'com.h2database', name: 'h2'

}

clean {
    delete "target"
}

task wrapper(type: Wrapper) {
    gradleVersion = wrapper_version
}

task stage(dependsOn: 'bootRepackage') {
}

task prod {
    run { systemProperty "spring.profiles.active", "prod" }
}

bootRun.mustRunAfter prod

task fast {
    run { systemProperty "spring.profiles.active", "dev,fase" }
}
bootRun.mustRunAfter fast

bootRun {


    jvmArgs = [
        // Lets you remote debug the Spring Boot application.  Useful if you are having issues running it in your IDE
        // to use, just uncomment this out
        '-Xdebug',
        '-Xrunjdwp:server=y,transport=dt_socket,address=4000,suspend=y',

        // forces you to pass in, via the command line, the security key.  This way, it won't require us to check the security key in
        "-DrememberMeKey=${rememberMeKey}"
    ]
}
