package com.github.jlgrock.informatix.workmanager.domain

import groovy.transform.EqualsAndHashCode
import groovy.transform.ToString

import javax.persistence.*
import javax.validation.constraints.NotNull
/**
 *
 */
@Entity
@Table(name="assignments")
@ToString
@EqualsAndHashCode
class Assignment {

    @Id
    @NotNull
    @GeneratedValue
    @Column(name = "id")
    Long id

    @OneToOne(targetEntity = Batch.class, fetch = FetchType.EAGER)
    @JoinColumn(nullable = false, name = "batch_id")
    Batch batch

    @OneToOne(targetEntity = User.class, fetch = FetchType.EAGER)
    @JoinColumn(name = "user_account_id")
    User userAccount

    @Column(name="num_records")
    int numberOfRecords

    @OneToOne(targetEntity = Attachment.class, cascade=CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinColumn(nullable = true, name="assignment_attachment_id")
    Attachment original

    @OneToMany(targetEntity = Attachment.class, cascade=CascadeType.ALL, fetch = FetchType.LAZY)
    @JoinTable(
            name="assignments_completed",
            joinColumns = @JoinColumn(name = "assignment_id", referencedColumnName = "id"),
            inverseJoinColumns = @JoinColumn(name = "attachment_id", referencedColumnName = "id", unique = true)
    )
    Collection<Attachment> completed = new ArrayList<Attachment>()

    @Column(name="billable_hours")
    Double billableHours

    @Column(name="is_auto_generated")
    boolean isAutoGenerated

    @Column(name="status")
    @NotNull
    @Enumerated(EnumType.STRING)
    AssignmentStatus status
}
